"""Completely changing pattern of models

Revision ID: 56bf3faaeaf5
Revises: a65c795405b5
Create Date: 2025-04-24 16:57:53.585714

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = '56bf3faaeaf5'
down_revision: Union[str, None] = 'a65c795405b5'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.execute("DROP TABLE IF EXISTS documents CASCADE")
    op.execute("DROP TABLE IF EXISTS projects_chapters CASCADE")
    op.drop_table('source_links')
    op.drop_table('project_goals')
    op.drop_table('user_to_project')
    op.drop_table('project_sections')
    # ### end Alembic commands ###


    # documents table
    op.create_table(
        'documents',
        sa.Column('id', sa.Integer(), primary_key=True, autoincrement=True),
        sa.Column('user_id', sa.Integer(), sa.ForeignKey('users.id'), nullable=False),
        sa.Column('title', sa.String(), nullable=False),
        sa.Column('content', sa.Text(), nullable=False),
        sa.Column('was_created', sa.DateTime(), server_default=sa.func.now(), nullable=False),
    )

    # validations table
    op.create_table(
        'validations',
        sa.Column('id', sa.Integer(), primary_key=True, autoincrement=True),
        sa.Column('document_id', sa.Integer(), sa.ForeignKey('documents.id'), nullable=False),
        sa.Column('validated', sa.Boolean(), nullable=False, default=False),
        sa.Column('is_valid', sa.Boolean(), nullable=False, default=False),
    )

    # errors table
    op.create_table(
        'errors',
        sa.Column('id', sa.Integer(), primary_key=True, autoincrement=True),
        sa.Column('validation_id', sa.Integer(), sa.ForeignKey('validations.id'), nullable=False),
        sa.Column('error', sa.String(), nullable=False),
        sa.Column('resolved', sa.Boolean(), nullable=False, default=False),
    )

def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('project_sections',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('title', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('content', sa.TEXT(), autoincrement=False, nullable=False),
    sa.Column('chapter_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.ForeignKeyConstraint(['chapter_id'], ['project_chapters.id'], name='project_sections_chapter_id_fkey'),
    sa.PrimaryKeyConstraint('id', name='project_sections_pkey')
    )
    op.create_table('user_to_project',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('user_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('project_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('role', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('permissions', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('last_modified', postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=True),
    sa.Column('last_viewed', postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=False),
    sa.ForeignKeyConstraint(['project_id'], ['projects.id'], name='user_to_project_project_id_fkey'),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], name='user_to_project_user_id_fkey'),
    sa.PrimaryKeyConstraint('id', name='user_to_project_pkey')
    )
    op.create_table('project_chapters',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('title', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('project_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.ForeignKeyConstraint(['project_id'], ['projects.id'], name='project_chapters_project_id_fkey'),
    sa.PrimaryKeyConstraint('id', name='project_chapters_pkey')
    )
    op.create_table('project_goals',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('content', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('project_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('is_reached', sa.BOOLEAN(), autoincrement=False, nullable=False),
    sa.ForeignKeyConstraint(['project_id'], ['projects.id'], name='project_goals_project_id_fkey'),
    sa.PrimaryKeyConstraint('id', name='project_goals_pkey')
    )
    op.create_table('source_links',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('title', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('href', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('project_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.ForeignKeyConstraint(['project_id'], ['projects.id'], name='source_links_project_id_fkey'),
    sa.PrimaryKeyConstraint('id', name='source_links_pkey')
    )
    op.create_table('projects',
    sa.Column('id', sa.INTEGER(), server_default=sa.text("nextval('projects_id_seq'::regclass)"), autoincrement=True, nullable=False),
    sa.Column('title', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('description', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('sub_title', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('abstract', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('keywords', postgresql.ARRAY(sa.VARCHAR()), autoincrement=False, nullable=True),
    sa.Column('study_organization', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.PrimaryKeyConstraint('id', name='projects_pkey'),
    postgresql_ignore_search_path=False
    )
    op.create_table('documents',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('project_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('content', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('last_modified', postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=False),
    sa.ForeignKeyConstraint(['project_id'], ['projects.id'], name='documents_project_id_fkey'),
    sa.PrimaryKeyConstraint('id', name='documents_pkey')
    )
    # ### end Alembic commands ###
